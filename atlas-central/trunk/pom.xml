<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.incf</groupId>
  <artifactId>atlas-central</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>INCF Atlas Central Server</name>
  <description>INCF Atlas Central Server</description>

  <build>
    <finalName>atlas-central</finalName>

    <plugins>

       <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <!-- delete the data files and hsql database on clean -->
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/webapp/WEB-INF/cache</directory>
              <includes>
                <include>**/*.*</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- This is needed otherwise maven seems to use Java v1.4 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.incf.atlas.central.util.XmlFilesBuilder</mainClass>
        </configuration>
      </plugin>

<!--      <plugin>-->
<!--        <groupId>org.codehaus.mojo</groupId>-->
<!--        <artifactId>xml-maven-plugin</artifactId>-->
<!--        <version>1.0-beta-3-SNAPSHOT</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <goals>-->
<!--              <goal>transform</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--        <configuration>-->
<!--          <transformationSets>-->
<!--            <transformationSet>-->
<!--              <dir>src/main/xml</dir>-->
<!--              <includes>-->
<!--                <include>CentralDescribeProcess.xml</include>-->
<!--              </includes>-->
<!--              <stylesheet>src/main/xslt/CentralProcessDescriptions.xslt</stylesheet>-->
<!--              <outputDir>${project.build.directory}/generated-resources/xml</outputDir>-->
<!--            </transformationSet>-->
<!--            <transformationSet>-->
<!--              <dir>$project.build.directory/generated-resources/xml/xslt</dir>-->
<!--              <stylesheet>src/main/xslt/CentralCapabilities.xslt</stylesheet>-->
<!--            </transformationSet>-->
<!--          </transformationSets>-->
<!--        </configuration>-->
<!--      </plugin>-->

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes</outputDirectory>
              <resources>          
                <resource>
                  <directory>${basedir}/target/generated-resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  
    <!-- resolve variables in resource files in the build process -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.incf</groupId>
      <artifactId>atlas-common</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
<dependency>
    <groupId>xalan</groupId>
    <artifactId>xalan</artifactId>
    <version>2.7.1</version>
</dependency>    
<dependency>
    <groupId>jaxen</groupId>
    <artifactId>jaxen</artifactId>
    <version>1.1.1</version>
    <scope>runtime</scope>
</dependency>
<dependency>
      <groupId>org.restlet</groupId>
      <artifactId>org.restlet</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.noelios.restlet</groupId>
      <artifactId>com.noelios.restlet</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.restlet</groupId>
      <artifactId>org.restlet.ext.jaxb</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.noelios.restlet</groupId>
      <artifactId>com.noelios.restlet.ext.servlet</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <!-- jul (java.util.logging). Restlets use JUL so this dependency
           translates JUL statements to slf4j. -->
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.5.8</version>
    </dependency>
    <dependency>
      <!-- We are choosing to have log4j as the underlying logging package. -->
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.8</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>2.1</version>
      <classifier>EA1</classifier>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon-he</artifactId>
      <version>9.2.1.1</version>
    </dependency>
    <dependency>
      <groupId>java3d</groupId>
      <artifactId>vecmath</artifactId>
      <version>1.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.0</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.6</version>
    </dependency>
    
    <dependency>
    	<groupId>postgresql</groupId>
    	<artifactId>postgresql</artifactId>
    	<version>8.4-701.jdbc3</version>
	</dependency>
    
  </dependencies>
  
  <repositories>
    <repository>
      <id>Codehaus Snapshots</id>
      <url>http://snapshots.repository.codehaus.org/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  
  <pluginRepositories>
    <pluginRepository>
      <id>Codehaus Snapshots</id>
      <url>http://snapshots.repository.codehaus.org/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>  <!-- Workaround for MNG-2974, see note below -->
      </releases>
    </pluginRepository>
  </pluginRepositories>
  
</project>