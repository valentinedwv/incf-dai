package org.deegree.protocol.wms.dims;

import java.util.LinkedList;
import java_cup.runtime.*;
import org.deegree.commons.utils.*;

terminal           COMMA, SLASH, TOKEN;
non terminal       strt, values, interval;

strt ::= values:vals               {: RESULT = vals; :};

values ::= TOKEN:val COMMA strt:vals    {: if(vals instanceof LinkedList) ((LinkedList)vals).addFirst(val);
                                           RESULT = vals; :}
         | TOKEN:val                    {: RESULT = new LinkedList();
                                           ((LinkedList)RESULT).add(val); :}
         | TOKEN:val COMMA error        {: String msg = "Expected another value after '" + val + ",'.";
                                           parser.report_error(msg, null);
                                           RESULT = new Exception(msg); :}
         | interval:val COMMA strt:vals {:
                                           if(val instanceof Exception){
                                             RESULT = val;
                                           }else{
                                             if(vals instanceof LinkedList) ((LinkedList)vals).addFirst(val);
                                             RESULT = vals;
                                           } :}
         | interval:val                 {: if(val instanceof Exception){
                                             RESULT = val;
                                           }else{
                                             RESULT = new LinkedList();
                                             ((LinkedList)RESULT).add(val);
                                           } :}
         | interval:val COMMA error:err {: String msg = (String)(err == null ? "Expected another interval after '" + val + ",'." : ((Exception)err).getMessage());
                                           parser.report_error(msg, null);
                                           RESULT = new Exception(msg); :};


interval ::= TOKEN:min SLASH TOKEN:max                 {: RESULT = new DimensionInterval(min, max, 0); :}
           | TOKEN:min SLASH TOKEN:max SLASH           {: RESULT = new DimensionInterval(min, max, 0); :}
           | TOKEN:min SLASH TOKEN:max SLASH TOKEN:res {: RESULT = new DimensionInterval(min, max, res); :}
           | TOKEN:min error                           {: String msg = "Missing '/' after " + min + ".";
                                                          parser.report_error(msg, null);
                                                          RESULT = new Exception(msg); :}
           | TOKEN:min SLASH error                     {: String msg = "Missing max value for interval.";
                                                          parser.report_error(msg, null);
                                                          RESULT = new Exception(msg); :};
